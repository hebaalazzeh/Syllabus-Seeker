generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING") // Used for migrations
}

model School {
  id        String     @id @default(cuid())
  name      String
  courses   Course[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Department {
  id        String     @id @default(cuid())
  name      String
  courses   Course[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Professor {
  id        String     @id @default(cuid())
  name      String
  email     String?
  syllabi   Syllabus[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Course {
  id           String     @id @default(cuid())
  courseCode   String
  name         String
  school       School     @relation(fields: [schoolId], references: [id])
  schoolId     String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String
  syllabi      Syllabus[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Syllabus {
  id           String     @id @default(cuid())
  course       Course     @relation(fields: [courseId], references: [id])
  courseId     String
  professor    Professor  @relation(fields: [professorId], references: [id])
  professorId  String
  term         String
  year         Int
  fileUrl      String?
  fileData     String?
  professorRating Float?
  courseRating   Float?
  comments     Comment[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Comment {
  id         String   @id @default(cuid())
  content    String
  syllabus   Syllabus @relation(fields: [syllabusId], references: [id])
  syllabusId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}